# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
    - name: set pre-commit cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pre-commit
          ~/.cache/pip
        key: ${{ matrix.python_version }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('setup.py') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --pre -e '.[dev]'
    - name: Pre-commit hooks
      if: ${{ matrix.python_version != 'pypy3' }}
      run: pre-commit run --all-files
    - name: Test with pytest
      run: pytest
      env:
        PYTHONWARNINGS: error


  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl git && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              python -m pip install --upgrade pip && \
              pip install --pre -e '.[dev]' && \
              export PYTHONWARNINGS=error && \
              pytest && \
              deactivate'
